{
  "name": "malloy-vscode",
  "publisher": "malloydata",
  "displayName": "Malloy",
  "description": "Malloy is an experimental language for describing data relationships and transformations",
  "version": "0.2.0",
  "private": true,
  "config": {
    "malloy_packages": [
      "@malloydata/malloy",
      "@malloydata/db-bigquery",
      "@malloydata/db-duckdb",
      "@malloydata/db-postgres",
      "@malloydata/render"
    ]
  },
  "engines": {
    "vscode": "^1.72.0",
    "node": ">=12"
  },
  "scripts": {
    "build": "tsc --build && npm run build-extension",
    "lint": "gts lint",
    "lint-fix": "gts fix",
    "test": "jest --runInBand",
    "build-extension": "ts-node scripts/build-extension build",
    "build-extension-dev": "ts-node scripts/build-extension build -D",
    "package-extension": "ts-node scripts/package-extension package",
    "publish-extensions": "ts-node scripts/publish-extensions",
    "malloy-update-next": "npm install  --no-fund --no-audit --save-exact $(echo $npm_package_config_malloy_packages | sed -E 's/(@malloydata\\/[-a-z]+)/\\1@next/g')",
    "malloy-update": "npm install  --no-fund --no-audit --save-exact $(echo $npm_package_config_malloy_packages | sed -E 's/(@malloydata\\/[-a-z]+)/\\1@latest/g')",
    "malloy-link": "npm --no-fund --no-audit link $npm_package_config_malloy_packages",
    "malloy-unlink": "npm --no-fund --no-save --no-audit unlink $npm_package_config_malloy_packages && npm --no-fund --no-audit install --force",
    "clean": "gts clean",
    "compile": "tsc",
    "fix": "gts fix",
    "prepare": "npm run compile",
    "pretest": "npm run compile",
    "posttest": "npm run lint"
  },
  "icon": "img/logo.png",
  "license": "MIT",
  "categories": [
    "Programming Languages",
    "Data Science",
    "Visualization",
    "Other"
  ],
  "activationEvents": [
    "onCommand:malloy.showLicenses",
    "onCommand:malloy.runQueryFile",
    "onCommand:malloy.runQuery",
    "onCommand:malloy.runNamedQuery",
    "onCommand:malloy.runTurtleFromSchema",
    "onCommand:malloy.runTurtleWithFilters",
    "onCommand:malloy.copyFieldPath",
    "onCommand:malloy.refreshSchema",
    "onCommand:malloy.editConnections",
    "onLanguage:malloy",
    "workspaceContains:**/.malloy",
    "onView:malloyConnections",
    "onView:malloySchema",
    "onWebviewPanel:malloyQuery",
    "onWebviewPanel:malloyConnections",
    "onNotebook:malloy-notebook"
  ],
  "main": "./dist/extension_node",
  "configurationDefaults": {
    "[malloy]": {
      "editor.semanticHighlighting.enabled": true
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/malloydata/malloy-vscode-extension"
  },
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "malloy",
          "title": "Malloy",
          "icon": "img/logo.png"
        }
      ]
    },
    "commands": [
      {
        "command": "malloy.showLicenses",
        "title": "Show Licenses",
        "category": "Malloy"
      },
      {
        "command": "malloy.runQueryFile",
        "title": "Run Query File",
        "category": "Malloy"
      },
      {
        "command": "malloy.runQuery",
        "title": "Run Query",
        "category": "Malloy",
        "enablement": "false"
      },
      {
        "command": "malloy.runNamedQuery",
        "title": "Run Named Query",
        "category": "Malloy",
        "enablement": "false"
      },
      {
        "command": "malloy.runTurtleFromSchema",
        "title": "Run Query From Schema",
        "category": "Malloy",
        "icon": {
          "light": "img/play.svg",
          "dark": "img/play.svg"
        },
        "enablement": "view == malloySchema && viewItem == query"
      },
      {
        "command": "malloy.runTurtleWithFilters",
        "title": "Run Query With Filters",
        "category": "Malloy",
        "enablement": "false"
      },
      {
        "command": "malloy.copyFieldPath",
        "title": "Copy Field Path",
        "category": "Malloy"
      },
      {
        "command": "malloy.refreshSchema",
        "title": "Refresh Schema",
        "category": "Malloy",
        "icon": {
          "light": "img/refresh.svg",
          "dark": "img/refresh.svg"
        }
      },
      {
        "command": "malloy.editConnections",
        "title": "Edit Connections",
        "category": "Malloy"
      },
      {
        "command": "malloy.runNamedSQLBlock",
        "title": "Run Named SQL Block",
        "category": "Malloy",
        "enablement": "false"
      },
      {
        "command": "malloy.runUnnamedSQLBlock",
        "title": "Run Unnamed SQL Block",
        "category": "Malloy",
        "enablement": "false"
      },
      {
        "category": "Create",
        "command": "malloy.newUntitledNotebook",
        "title": "Malloy Notebook"
      },
      {
        "title": "Table",
        "category": "Malloy Renderer",
        "command": "malloy.rendererTable",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "List",
        "category": "Malloy Renderer",
        "command": "malloy.rendererList",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "Bar Chart",
        "category": "Malloy Renderer",
        "command": "malloy.rendererBarChart",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "Line Chart",
        "category": "Malloy Renderer",
        "command": "malloy.rendererLineChart",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "Scatter Chart",
        "category": "Malloy Renderer",
        "command": "malloy.rendererScatterChart",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "Shape Map",
        "category": "Malloy Renderer",
        "command": "malloy.rendererShapeMap",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "Point Map",
        "category": "Malloy Renderer",
        "command": "malloy.rendererPointMap",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "Segment Map",
        "category": "Malloy Renderer",
        "command": "malloy.rendererSegmentMap",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "JSON",
        "category": "Malloy Renderer",
        "command": "malloy.rendererJson",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      },
      {
        "title": "Dashboard",
        "category": "Malloy Renderer",
        "command": "malloy.rendererDashboard",
        "enablement": "notebookType == malloy-notebook && notebookCellType == code"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "malloy.refreshSchema",
          "when": "view == malloySchema",
          "group": "navigation"
        },
        {
          "command": "malloy.editConnections",
          "when": "view == malloyConnections",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "malloy.runTurtleFromSchema",
          "when": "view == malloySchema && viewItem == query",
          "group": "inline"
        }
      ],
      "file/newFile": [
        {
          "command": "malloy.newUntitledNotebook",
          "group": "notebook"
        }
      ],
      "notebook/cell/title": [
        {
          "submenu": "malloy.renderer",
          "when": "notebookType == malloy-notebook && notebookCellType == code"
        }
      ],
      "malloy.renderer": [
        {
          "command": "malloy.rendererTable"
        },
        {
          "command": "malloy.rendererBarChart"
        },
        {
          "command": "malloy.rendererLineChart"
        },
        {
          "command": "malloy.rendererScatterChart"
        },
        {
          "command": "malloy.rendererShapeMap"
        },
        {
          "command": "malloy.rendererPointMap"
        },
        {
          "command": "malloy.rendererSegmentMap"
        },
        {
          "command": "malloy.rendererJson"
        },
        {
          "command": "malloy.rendererList"
        },
        {
          "command": "malloy.rendererDashboard"
        }
      ]
    },
    "submenus": [
      {
        "id": "malloy.renderer",
        "label": "Select Renderer"
      }
    ],
    "languages": [
      {
        "id": "malloy",
        "extensions": [
          ".malloy",
          ".malloynb"
        ],
        "aliases": [
          "Malloy",
          "malloy"
        ],
        "filenames": [],
        "configuration": "language.json",
        "icon": {
          "dark": "./img/icon.svg",
          "light": "./img/icon.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "malloy",
        "scopeName": "source.malloy",
        "path": "./malloy.tmGrammar.json"
      }
    ],
    "views": {
      "malloy": [
        {
          "id": "malloyHelp",
          "name": "Help",
          "type": "webview",
          "when": "malloy.extensionStatus == installed || resourceFilename =~ /\\.malloy$/"
        }
      ],
      "explorer": [
        {
          "id": "malloySchema",
          "name": "Malloy Schema",
          "when": "malloy.webviewPanelFocused == true || resourceFilename =~ /\\.malloy(nb)?$/"
        },
        {
          "id": "malloyConnections",
          "name": "Malloy Connections",
          "when": "malloy.webviewPanelFocused == true || resourceFilename =~ /\\.malloy(nb)?$/"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "malloyConnections",
        "contents": "No configured connections.\n[Edit Connections](command:malloy.editConnections)"
      }
    ],
    "configuration": {
      "title": "Malloy",
      "properties": {
        "malloy.rowLimit": {
          "type": "number",
          "description": "Maximum number of top-level rows to fetch when running queries.",
          "default": 50
        },
        "malloy.downloadsPath": {
          "type": "string",
          "description": "Path to directory to save downloaded results",
          "default": "~/Downloads"
        },
        "malloy.telemetry": {
          "type": "boolean",
          "description": "Whether telemetry is enabled for the Malloy extension. Used in conjunction with the `telemetry.telemetryLevel` setting and the --disable-telemetry CLI flag.",
          "default": true
        },
        "malloy.connections": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "backend": {
                    "type": "string",
                    "const": "postgres"
                  },
                  "host": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "databaseName": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "backend": {
                    "type": "string",
                    "const": "bigquery"
                  },
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "projectName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "serviceAccountKeyPath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "backend": {
                    "type": "string",
                    "const": "duckdb"
                  },
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "workingDirectory": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "backend": {
                    "type": "string",
                    "const": "duckdb_wasm"
                  },
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "workingDirectory": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "description": "Connections for Malloy to use to access data when compiling and querying."
        }
      }
    },
    "walkthroughs": [
      {
        "id": "malloy-quickstart",
        "title": "Quick Start",
        "description": "Quickly get up to speed with Malloy.",
        "steps": [
          {
            "id": "configure-connections",
            "title": "Connect a Database",
            "description": " \n[Edit Connections](command:malloy.editConnections)",
            "media": {
              "markdown": "media/connections.md"
            },
            "completionEvents": [
              "onSettingChanged:malloy.connections"
            ]
          },
          {
            "id": "download-samples",
            "title": "Download Sample Models",
            "description": " \n[Download All Sample Models](https://github.com/malloydata/malloy-samples/releases/latest)",
            "media": {
              "markdown": "media/sample-models.md"
            }
          },
          {
            "id": "check-out-samples",
            "title": "Explore Malloy Documentation",
            "description": "Malloy documentation is super cool!\n[Visit Documentation](https://malloydata.github.io/documentation/language/basic.html)",
            "media": {
              "markdown": "media/docs.md"
            }
          }
        ]
      }
    ],
    "notebooks": [
      {
        "id": "malloy-notebook",
        "type": "malloy-notebook",
        "displayName": "Malloy Notebook",
        "selector": [
          {
            "filenamePattern": "*.malloynb"
          }
        ]
      }
    ],
    "notebookRenderer": [
      {
        "displayName": "Malloy",
        "entrypoint": "./dist/malloy_entry.js",
        "id": "malloy.notebook-renderer",
        "mimeTypes": [
          "x-application/malloy-results"
        ]
      },
      {
        "displayName": "JSON",
        "entrypoint": "./dist/json_entry.js",
        "id": "malloy.notebook-renderer-json",
        "mimeTypes": [
          "x-application/malloy-results"
        ]
      },
      {
        "displayName": "SQL",
        "entrypoint": "./dist/sql_entry.js",
        "id": "malloy.notebook-renderer-sql",
        "mimeTypes": [
          "x-application/malloy-results"
        ]
      }
    ]
  },
  "dependencies": {
    "@malloydata/db-bigquery": "0.0.27",
    "@malloydata/db-duckdb": "0.0.27",
    "@malloydata/db-postgres": "0.0.27",
    "@malloydata/malloy": "0.0.27",
    "@malloydata/render": "0.0.27",
    "@popperjs/core": "^2.11.6",
    "@vscode/webview-ui-toolkit": "^1.2.1",
    "duckdb": "0.7.1",
    "keytar": "7.7.0",
    "lodash": "^4.17.21",
    "markdown-to-jsx": "^7.1.9",
    "node-fetch": "^2.6.6",
    "prismjs": "^1.28.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-popper": "^2.3.0",
    "react-popper-tooltip": "^4.3.1",
    "shiki": "^0.10.0",
    "styled-components": "^5.3.3",
    "tar-stream": "^3.0.0",
    "uuid": "^8.3.2",
    "vscode-languageclient": "^7.0.0",
    "vscode-languageserver": "^7.0.0",
    "vscode-languageserver-textdocument": "^1.0.8",
    "vscode-uri": "^3.0.7",
    "vscode-webview": "^1.0.1-beta.1"
  },
  "devDependencies": {
    "@jest/globals": "^26.6.2",
    "@types/jest": "^29.2.1",
    "@types/jest-expect-message": "^1.1.0",
    "@types/jsdom": "^16.2.11",
    "@types/lodash": "^4.14.191",
    "@types/node": "^14.11.2",
    "@types/node-fetch": "^2.6.2",
    "@types/prismjs": "^1.26.0",
    "@types/react": "^17.0.38",
    "@types/react-dom": "^17.0.11",
    "@types/semver": "^7.3.9",
    "@types/styled-components": "^5.1.19",
    "@types/tar-stream": "^2.2.2",
    "@types/uuid": "^8.3.4",
    "@types/vscode": "1.72.0",
    "@types/vscode-notebook-renderer": "^1.72.0",
    "@types/vscode-webview": "^1.57.0",
    "@typescript-eslint/eslint-plugin": "^5.48.2",
    "@typescript-eslint/parser": "^5.48.2",
    "@vscode/test-electron": "^2.2.3",
    "@vscode/test-web": "^0.0.34",
    "esbuild": "0.17.4",
    "esbuild-plugin-svgr": "^1.0.1",
    "eslint": "^8.32.0",
    "eslint-config-prettier": "^8.6.0",
    "eslint-plugin-prettier": "^4.2.1",
    "gts": "^3.1.1",
    "jest": "^29.4.1",
    "jest-diff": "^29.4.1",
    "jest-expect-message": "^1.1.3",
    "jest-silent-reporter": "^0.5.0",
    "madge": "^6.0.0",
    "semver": "^7.3.5",
    "ts-jest": "^29.0.5",
    "ts-node": "^10.9.1",
    "typescript": "4.7.4",
    "vsce": "^2.6.3",
    "yargs": "^17.6.2"
  }
}
